syntax = "proto3";

package inkMe.user;

option go_package = "github.com/FACorreiaa/ink-app-backend-protos/modules/user/generated";

service UserService {

  // New user-related services
  rpc GetUsers(GetUsersReq) returns (GetUsersRes);
  rpc GetUserByID(GetUserByIDReq) returns (GetUserByIDRes);
  rpc DeleteUser(DeleteUserReq) returns (DeleteUserRes);
  rpc UpdateUser(UpdateUserReq) returns (UpdateUserRes);
  rpc InsertUser(InsertUserReq) returns (InsertUserRes);
  rpc GetUserByEmail(GetUserByEmailReq) returns (GetUserByEmailRes);
  rpc GetUserByUsername(GetUserByUsernameReq) returns (GetUserByUsernameRes);
}

message GetUserByEmailReq {
  string email = 1;
  BaseRequest request = 100;
}

message GetUserByUsernameReq {
  string username = 1;
  BaseRequest request = 100;
}

message GetUserByUsernameRes {
  User user = 1;
  BaseResponse response = 100;
}

message GetUserByEmailRes {
  User user = 1;
  BaseResponse response = 100;
}




message User {
  string user_id = 1;
  string email = 2;
  string username = 3;
  string password_hash = 4;
  bool is_admin = 5;
  string created_at = 6;
  string updated_at = 7;
  enum Role {
    ROLE_UNSPECIFIED = 0;
    ADMIN = 1;
    STAFF = 2;
    USER = 3;
    MODERATOR = 4;
  }

  Role role = 8;
  string studio_id = 9;
}

// Request and response messages for new user-related services
message GetUsersReq {
  BaseRequest request = 100;
}

message GetUsersRes {
  repeated User users = 1;
  BaseResponse response = 100;
}

message GetUserByIDReq {
  string user_id = 1;
  BaseRequest request = 100;
}

message GetUserByIDRes {
  User user = 1;
  BaseResponse response = 100;
}

message DeleteUserReq {
  string user_id = 1;
  BaseRequest request = 100;
}

message DeleteUserRes {
  string message = 1;
  BaseResponse response = 100;
}

message UpdateUserReq {
  User user = 1;
  BaseRequest request = 100;
}

message UpdateUserRes {
  string message = 1;
  BaseResponse response = 100;
}

message InsertUserReq {
  User user = 1;
  BaseRequest request = 100;

}

message InsertUserRes {
  string message = 1;
  BaseResponse response = 100;
}

message BaseRequest {
  string downstream = 998;
  string request_id = 999;
}

message BaseResponse {
  string upstream = 998;
  string request_id = 999;
  string status = 1000;
}
