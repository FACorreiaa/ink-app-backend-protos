syntax = "proto3";

package inkMe.customer;

option go_package = "github.com/yourorg/inkme-grpc/inkMe/Customer";

service CustomerService {
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc GetCustomer(GetCustomerRequest) returns (GetCustomerResponse);
  rpc ListCustomers(ListCustomersRequest) returns (ListCustomersResponse);
  rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse);

  rpc DeleteCustomer(DeleteCustomerRequest) returns (DeleteCustomerResponse); // Add delete functionality
  rpc ArchiveCustomer(ArchiveCustomerRequest) returns (ArchiveCustomerResponse); // Soft delete or archive inactive Customers
  rpc GetCustomerHistory(GetCustomerHistoryRequest) returns (GetCustomerHistoryResponse); // Retrieve Customer interaction history (e.g., appointments, messages)
  rpc AddCustomerNote(AddCustomerNoteRequest) returns (AddCustomerNoteResponse); // Add private notes about a Customer (e.g., preferences, allergies)
  rpc SearchCustomers(SearchCustomersRequest) returns (SearchCustomersResponse); // Search Customers by name, phone, or other criteria
}


message CreateCustomerRequest {
  Customer customer = 1;
  BaseRequest request = 100;
}

message CreateCustomerResponse {
  string customer_id = 1;
  string message   = 2;
  BaseResponse response = 100;
}

message GetCustomerRequest {
  string customer_id = 1;
  BaseRequest request = 100;
}

message GetCustomerResponse {
  Customer customer = 1;
  BaseResponse response = 100;
}

message ListCustomersRequest {
  string studio_id = 1;
  // optionally filter by customer_id
  BaseRequest request = 100;
}

message ListCustomersResponse {
  repeated Customer customers = 1;
  BaseResponse response = 100;
}

message UpdateCustomerRequest {
  string customer_id = 1;
  repeated XDiff diffs = 2;
  BaseRequest request = 100;
}

message UpdateCustomerResponse {
  bool success = 1;
  string message = 2;
  Customer customer = 3;
  BaseResponse response = 100;
}

message Customer {
  string id         = 1;
  string studio_id  = 2;
  string full_name  = 3;
  string email      = 4;
  string phone      = 5;
  string notes      = 6;
}

message BaseRequest {
  string downstream = 998;
  string request_id = 999;
}

message BaseResponse {
  string upstream = 998;
  string request_id = 999;
  string status = 1000;
}

message XDiff {
  string field      = 1;
  string old_value  = 2;
  string new_value  = 3;
}

message DeleteCustomerRequest {
  string id = 1;
  BaseRequest request = 100;
}

message DeleteCustomerResponse {
  string message = 1;
  BaseResponse response = 100;
}

message ArchiveCustomerRequest {
  string id = 1;
  BaseRequest request = 100;
}

message ArchiveCustomerResponse {
  string message = 1;
  BaseResponse response = 100;
}

message GetCustomerHistoryRequest {
  string customer_id = 1;
  BaseRequest request = 100;
}

message GetCustomerHistoryResponse {
  repeated Interaction interactions = 1;
  BaseResponse response = 100;
}

message Interaction {
  string id         = 1;
  string customer_id  = 2;
  string artist_id  = 3;
  string appointment_id = 4;
  string message    = 5;
  string created_at = 6;
}

message AddCustomerNoteRequest {
  string customer_id = 1;
  string note      = 2;
  BaseRequest request = 100;
}

message AddCustomerNoteResponse {
  string message = 1;
  BaseResponse response = 100;
}

message SearchCustomersRequest {
  string query = 1;
  BaseRequest request = 100;
}

message SearchCustomersResponse {
  repeated Customer customers = 1;
  BaseResponse response = 100;
}