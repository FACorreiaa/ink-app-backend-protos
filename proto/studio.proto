syntax = "proto3";

package inkMe.studio;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/FACorreiaa/ink-app-backend-protos/modules/studio/generated";

// StudioService for managing tattoo studios and staff
service StudioService {
  // Creates a new studio with owner
  rpc CreateStudio(CreateStudioRequest) returns (CreateStudioResponse);
  // For existing studio owners to edit their studio
  rpc UpdateStudio(UpdateStudioRequest) returns (UpdateStudioResponse);

  // For multi-studio scenarios
  rpc ListStudios(ListStudiosRequest) returns (ListStudiosResponse);
  // Staff management
  rpc AddStaffMember(AddStaffMemberRequest) returns (AddStaffMemberResponse);
  rpc UpdateStaffMember(UpdateStaffMemberRequest) returns (UpdateStaffMemberResponse);
  rpc RemoveStaffMember(RemoveStaffMemberRequest) returns (RemoveStaffMemberResponse);
  rpc ListStaffMembers(ListStaffMembersRequest) returns (ListStaffMembersResponse);

  // Permissions and roles
  rpc SetStaffPermissions(SetStaffPermissionsRequest) returns (SetStaffPermissionsResponse);
  rpc GetStaffPermissions(GetStaffPermissionsRequest) returns (GetStaffPermissionsResponse);
}

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);
  rpc ChangeEmail(ChangeEmailRequest) returns (ChangeEmailResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (TokenResponse);
  rpc ValidateSession(ValidateSessionRequest) returns (ValidateSessionResponse);
  rpc ChangeOwnPassword(ChangeOwnPasswordRequest) returns (ChangeOwnPasswordResponse);
  rpc AdminResetUserPassword(AdminResetUserPasswordRequest) returns (AdminResetUserPasswordResponse);
}


message CreateStudioRequest {
  Studio studio = 1;
  BaseRequest request = 100;
}

message CreateStudioResponse {
  string studio_id = 1;
  string message = 2;
  BaseResponse response = 100;
}

message UpdateStudioRequest {
  string studio_id = 1;
  Studio studio = 2;
  google.protobuf.FieldMask update_mask = 3;
  BaseRequest base = 100;
}

message UpdateStudioResponse {
  bool success = 1;
  string message = 2;
  Studio studio = 3;
  BaseResponse response = 100;
}

message AddStaffMemberRequest {
  string studio_id = 1;
  string user_id = 2;
  string role = 3;
  repeated string permissions = 4;
  BaseRequest request = 100;
}

message AddStaffMemberResponse {
  string staff_id = 1;
  string message = 2;
  BaseResponse response = 100;
}

message UpdateStaffMemberRequest {
  string staff_id = 1;
  string role = 2;
  BaseRequest request = 100;
}

message UpdateStaffMemberResponse {
  string message = 1;
  BaseResponse response = 100;
}

message RemoveStaffMemberRequest {
  string staff_id = 1;
  BaseRequest request = 100;
}

message RemoveStaffMemberResponse {
  string message = 1;
  BaseResponse response = 100;
}

message ListStaffMembersRequest {
  string studio_id = 1;
  BaseRequest request = 100;
}

message ListStaffMembersResponse {
  repeated StaffMember staff_members = 1;
  BaseResponse response = 100;
}

message SetStaffPermissionsRequest {
  string staff_id = 1;
  repeated string permissions = 2;
  BaseRequest request = 100;
}

message SetStaffPermissionsResponse {
  string message = 1;
  BaseResponse response = 100;
}

message GetStaffPermissionsRequest {
  string staff_id = 1;
  BaseRequest request = 100;
}

message GetStaffPermissionsResponse {
  repeated string permissions = 1;
  BaseResponse response = 100;
}



message Studio {
  string studio_id = 1;
  string name = 2;
  string address = 3;
  string phone = 4;
  string email = 5;
  string website = 6;
  OwnerInfo owner = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message StaffMember {
  string staff_id = 1;
  string studio_id = 2;
  string user_id = 3;
  string role = 4;
  repeated string permissions = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message OwnerInfo {
  string email = 1;
  string password = 2; // Hashed password
  string display_name = 3;
  string username = 4;
  string first_name = 5;
  string last_name = 6;
}

// For ListStudios RPC
message ListStudiosRequest {
  int32 page_size = 1;
  int32 page_number = 2;
  string filter = 3;
  string owner_id = 4; // Optional: to filter studios by owner
  BaseRequest request = 100;
}

message ListStudiosResponse {
  repeated Studio studios = 1;
  int32 total_count = 2;
  int32 page_number = 3;
  int32 total_pages = 4;
  BaseResponse response = 100;
}

message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string studio_id = 4;
  string role = 5;
  google.protobuf.Timestamp created_at = 6;
  BaseRequest request = 100;
}

message RegisterResponse {
  string message = 1;
  BaseResponse response = 100;
}

message LoginRequest {
  string username = 1;
  string password = 2;
  string email = 3;
  BaseRequest request = 100;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  string message = 3;
  bool success = 4;
  BaseResponse response = 100;
}

message LogoutRequest {
  string session_id = 1;
  BaseRequest request = 100;
}

message LogoutResponse {
  bool success = 1;
  string message = 2;
  BaseResponse response = 100;
}

message ValidateSessionRequest {
  string session_id = 1;
  BaseRequest request = 100;
}

message ValidateSessionResponse {
  bool valid = 1;
  string user_id = 2;
  string username = 3;
  string email = 4;
  repeated string permissions = 5;
  string role = 6;
  BaseResponse response = 100;
}

message ChangeOwnPasswordRequest {
  string old_password = 1;
  string new_password = 2;
}

message ChangeOwnPasswordResponse {
  string message = 1;
}

message AdminResetUserPasswordRequest {
  string target_user_id = 1;
  string new_password = 2;
}

message AdminResetUserPasswordResponse {
  string message = 1;
}


message ChangePasswordRequest {
  string username = 1;
  string old_password = 2;
  string new_password = 3;
  BaseRequest request = 100;
}

message ChangePasswordResponse {
  string message = 1;
  BaseResponse response = 100;
}

message ChangeEmailRequest {
  string username = 1;
  string password = 2;
  string new_email = 3;
  BaseRequest request = 100;
}

message ChangeEmailResponse {
  string message = 1;
  BaseResponse response = 100;
}

message RefreshTokenRequest {
  string refresh_token = 1;
  BaseRequest request = 100;
}

message TokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  BaseResponse response = 100;
}

message BaseRequest {
  string downstream = 998;
  string request_id = 999;
}

message BaseResponse {
  string upstream = 998;
  string request_id = 999;
  string status = 1000;
}
